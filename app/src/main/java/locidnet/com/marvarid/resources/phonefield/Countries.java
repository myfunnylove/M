package locidnet.com.marvarid.resources.phonefield;


import java.util.ArrayList;
import java.util.List;

public final class Countries {

  public static final List<Country> COUNTRIES = new ArrayList<>();

  static {
    COUNTRIES.add(new Country("ar", "Argentina", 54));
    COUNTRIES.add(new Country("am", "Armenia (Հայաստան)", 374));
    COUNTRIES.add(new Country("au", "Australia", 61));
    COUNTRIES.add(new Country("at", "Austria (Österreich)", 43));
    COUNTRIES.add(new Country("az", "Azerbaijan (Azərbaycan)", 994));
    COUNTRIES.add(new Country("bh", "Bahrain (‫البحرين‬‎)", 973));
    COUNTRIES.add(new Country("by", "Belarus (Беларусь)", 375));
    COUNTRIES.add(new Country("be", "Belgium (België)", 32));
    COUNTRIES.add(new Country("bo", "Bolivia", 591));
    COUNTRIES.add(new Country("ba", "Bosnia and Herzegovina (Босна и Херцеговина)", 387));
    COUNTRIES.add(new Country("br", "Brazil (Brasil)", 55));
    COUNTRIES.add(new Country("io", "British Indian Ocean Territory", 246));
    COUNTRIES.add(new Country("vg", "British Virgin Islands", 1284));
    COUNTRIES.add(new Country("bg", "Bulgaria (България)", 359));
    COUNTRIES.add(new Country("cm", "Cameroon (Cameroun)", 237));
    COUNTRIES.add(new Country("ca", "Canada", 1));
    COUNTRIES.add(new Country("cl", "Chile", 56));
    COUNTRIES.add(new Country("cn", "China (中国)", 86));
    COUNTRIES.add(new Country("co", "Colombia", 57));
    COUNTRIES.add(new Country("hr", "Croatia (Hrvatska)", 385));
    COUNTRIES.add(new Country("cu", "Cuba", 53));
    COUNTRIES.add(new Country("cy", "Cyprus (Κύπρος)", 357));
    COUNTRIES.add(new Country("cz", "Czech Republic (Česká republika)", 420));
    COUNTRIES.add(new Country("dk", "Denmark (Danmark)", 45));
    COUNTRIES.add(new Country("ec", "Ecuador", 593));
    COUNTRIES.add(new Country("eg", "Egypt (‫مصر‬‎)", 20));
    COUNTRIES.add(new Country("ee", "Estonia (Eesti)", 372));
    COUNTRIES.add(new Country("et", "Ethiopia", 251));
    COUNTRIES.add(new Country("fj", "Fiji", 679));
    COUNTRIES.add(new Country("fi", "Finland (Suomi)", 358));
    COUNTRIES.add(new Country("fr", "France", 33));
    COUNTRIES.add(new Country("ge", "Georgia (საქართველო)", 995));
    COUNTRIES.add(new Country("de", "Germany (Deutschland)", 49));
    COUNTRIES.add(new Country("gr", "Greece (Ελλάδα)", 30));
    COUNTRIES.add(new Country("hk", "Hong Kong (香港)", 852));
    COUNTRIES.add(new Country("hu", "Hungary (Magyarország)", 36));
    COUNTRIES.add(new Country("is", "Iceland (Ísland)", 354));
    COUNTRIES.add(new Country("in", "India (भारत)", 91));
    COUNTRIES.add(new Country("id", "Indonesia", 62));
    COUNTRIES.add(new Country("ir", "Iran (‫ایران‬‎)", 98));
    COUNTRIES.add(new Country("ie", "Ireland", 353));
    COUNTRIES.add(new Country("il", "Israel (‫ישראל‬‎)", 972));
    COUNTRIES.add(new Country("it", "Italy (Italia)", 39));
    COUNTRIES.add(new Country("jp", "Japan (日本)", 81));
    COUNTRIES.add(new Country("kz", "Kazakhstan (Казахстан)", 7));
    COUNTRIES.add(new Country("kw", "Kuwait (‫الكويت‬‎)", 965));
    COUNTRIES.add(new Country("kg", "Kyrgyzstan (Кыргызстан)", 996));
    COUNTRIES.add(new Country("lv", "Latvia (Latvija)", 371));
    COUNTRIES.add(new Country("li", "Liechtenstein", 423));
    COUNTRIES.add(new Country("mk", "Macedonia (FYROM) (Македонија)", 389));
    COUNTRIES.add(new Country("mg", "Madagascar (Madagasikara)", 261));
    COUNTRIES.add(new Country("my", "Malaysia", 60));
    COUNTRIES.add(new Country("mx", "Mexico (México)", 52));
    COUNTRIES.add(new Country("md", "Moldova (Republica Moldova)", 373));
    COUNTRIES.add(new Country("mc", "Monaco", 377));
    COUNTRIES.add(new Country("np", "Nepal (नेपाल)", 977));
    COUNTRIES.add(new Country("nl", "Netherlands (Nederland)", 31));
    COUNTRIES.add(new Country("nz", "New Zealand", 64));
    COUNTRIES.add(new Country("no", "Norway (Norge)", 47));
    COUNTRIES.add(new Country("om", "Oman (‫عُمان‬‎)", 968));
    COUNTRIES.add(new Country("pk", "Pakistan (‫پاکستان‬‎)", 92));
    COUNTRIES.add(new Country("ps", "Palestine (‫فلسطين‬‎)", 970));
    COUNTRIES.add(new Country("pa", "Panama (Panamá)", 507));
    COUNTRIES.add(new Country("py", "Paraguay", 595));
    COUNTRIES.add(new Country("pe", "Peru (Perú)", 51));
    COUNTRIES.add(new Country("ph", "Philippines", 63));
    COUNTRIES.add(new Country("pl", "Poland (Polska)", 48));
    COUNTRIES.add(new Country("pt", "Portugal", 351));
    COUNTRIES.add(new Country("qa", "Qatar (‫قطر‬‎)", 974));
    COUNTRIES.add(new Country("ro", "Romania (România)", 40));
    COUNTRIES.add(new Country("ru", "Russia (Россия)", 7));
    COUNTRIES.add(new Country("sm", "San Marino", 378));
    COUNTRIES.add(new Country("st", "São Tomé and Príncipe (São Tomé e Príncipe)", 239));
    COUNTRIES.add(new Country("sa", "Saudi Arabia (‫المملكة العربية السعودية‬‎)", 966));
    COUNTRIES.add(new Country("rs", "Serbia (Србија)", 381));
    COUNTRIES.add(new Country("sg", "Singapore", 65));
    COUNTRIES.add(new Country("sk", "Slovakia (Slovensko)", 421));
    COUNTRIES.add(new Country("si", "Slovenia (Slovenija)", 386));
    COUNTRIES.add(new Country("za", "South Africa", 27));
    COUNTRIES.add(new Country("kr", "South Korea (대한민국)", 82));
    COUNTRIES.add(new Country("es", "Spain (España)", 34));
    COUNTRIES.add(new Country("sd", "Sudan (‫السودان‬‎)", 249));
    COUNTRIES.add(new Country("se", "Sweden (Sverige)", 46));
    COUNTRIES.add(new Country("ch", "Switzerland (Schweiz)", 41));
    COUNTRIES.add(new Country("tw", "Taiwan (台灣)", 886));
    COUNTRIES.add(new Country("tj", "Tajikistan", 992));
    COUNTRIES.add(new Country("th", "Thailand (ไทย)", 66));
    COUNTRIES.add(new Country("tn", "Tunisia (‫تونس‬‎)", 216));
    COUNTRIES.add(new Country("tr", "Turkey (Türkiye)", 90));
    COUNTRIES.add(new Country("tm", "Turkmenistan", 993));
    COUNTRIES.add(new Country("vi", "U.S. Virgin Islands", 1340));
    COUNTRIES.add(new Country("ua", "Ukraine (Україна)", 380));
    COUNTRIES.add(new Country("ae", "United Arab Emirates (‫الإمارات العربية المتحدة‬‎)", 971));
    COUNTRIES.add(new Country("gb", "United Kingdom", 44));
    COUNTRIES.add(new Country("us", "United States", 1));
    COUNTRIES.add(new Country("uy", "Uruguay", 598));
    COUNTRIES.add(new Country("uz", "Uzbekistan (Oʻzbekiston)", 998));
    COUNTRIES.add(new Country("va", "Vatican City (Città del Vaticano)", 39));
    COUNTRIES.add(new Country("vn", "Vietnam (Việt Nam)", 84));
  }

}
